<!DOCTYPE html>
<html lang="ko">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"
      crossorigin="anonymous"
    />

    <title>할 일 관리</title>
  </head>
  <body style="width: 700px" class="mx-auto">
    <!-- my-4: margin y축(top, bottom둘 다) 마진값 -->
    <h2 class="text-center my-4">연락처 관리</h1>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj"
      crossorigin="anonymous"
    ></script>

    <!-- d-flex 해당 태그 플렉스화 -->
    <form id="form-input" class="d-flex" onsubmit="return false;">
      <!-- me-1: margin end(right-왼쪽부터 오른쪽 작성 언어일때) -->
      <input 
      id="txt-name" 
      type="text" 
      class="form-control me-1" 
      placeholder="이름">

      <input 
      id="txt-phone" 
      type="phone" 
      class="form-control me-1" 
      placeholder="전화번호" />
      
      <input 
      id="txt-email" 
      type="email" 
      class="form-control me-3" 
      placeholder="이메일: email@test.com" />

      <!-- text-nowrap - 한글사용시 줄바꿈 없앰. -->
      <button id="btn-add" type="button" class="btn btn-outline-primary text-nowrap">추가</button>
    </form>
      <!-- ul li에 입력값을 넣기위해 id를 넣어 선택자를 활용하기 편하게 함 -->
      <!-- <ul id="ul-list" class="list-group list-group-flush mt-4">
       </ul> -->

       <!-- table td에 입력값을 넣기 위한 id -->
       <table class="table table-striped rows">
       <thead>
         <th width=10%>#</th>
         <th>Name</th>
         <th>Phone-Call</th>
         <th width=28%>E-Mail</th>
         <th width=10%>작업</th>
      </thead>
       <tbody id="tbody">
        <tr id="tr"></tr>
       </tbody>
     
    </tr>
  </tbody>
</table>

    <script>
      // form 선택
      const form = document.querySelector("#form-input");
      // input요소 선택
      const txtName = document.querySelector("#txt-name");
      const txtPhone = document.querySelector("#txt-phone");
      const txtEmail = document.querySelector("#txt-email");
      // list요소 선택
      // 추가버튼 선택
      const btnAdd = document.querySelector("#btn-add");
      // tbody 선택
      const tbody = document.querySelector("#tbody");
      // tr요소선택
      const trow = document.querySelector("#tr");
      // tr갯수?
      let trNum = 1;
      if(remove(event)) {
        trNum--;
      }


        // 입력박스에 키보드 이벤트 추가
        // 엔터키를 입력했을 때만 화면에 추가하도록 함 
        // enter키의 key code = 13
        txtName.addEventListener("keyup", (event) =>{
        if (event.keyCode == 13) {
          add(event);
          }
        });
        txtPhone.addEventListener("keyup", (event) =>{
        // 엔터키를 입력했을 때만 화면에 추가하도록 함 
        // enter키의 key code = 13
        if (event.keyCode == 13) {
          add(event);
          }
        });

        txtEmail.addEventListener("keyup", (event) =>{
        // 엔터키를 입력했을 때만 화면에 추가하도록 함 
        // enter키의 key code = 13
        if (event.keyCode == 13) {
          txtMemo.blur(); // 입력박스의 포커스 초기화
          add(event);
          }
        });

      // 버튼에 이벤트 추가
      btnAdd.addEventListener("click", add)

      // tr 태그에 이벤트 추가
       tbody.addEventListener("click", remove)

      // 추가 이벤트 함수
      function add(event) {
        // console.log(txtEmail.value);
          
        // input중 하나라도 입력값이 없으면 함수 종료
        if(!txtName.value || !txtPhone.value || !txtEmail.value) {
          const alert = /*html*/ `
          <div class="alert alert-danger alert-dismissible my-2" role="alert" id="liveAlert">
            작성하지 않은 항목이 있습니다.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>    
          `;
          // form태그 밑에 출력
          form.insertAdjacentHTML("afterend", alert);

          return;
        }
        // 생성할 템플릿 문자열
        // let trNum = 1; 함수구문 안에 변수를 선언하면 외부에서는 초기화됨...
        // -> 함수 밖에서 선언후 함수에서 불러오자.
        const tr = /*html*/`
         <tr id="tr">
          <td>${trNum++}</td>
          <td>${txtName.value}</td>
          <td>${txtPhone.value}</td>
          <td>${txtEmail.value}</td>
          <td><button class="btn btn-outline-secondary btn-sm remove">삭제</button> </td>
         </tr>
        `;

        // ul 요소에 추가
        // trow요소의 끝태그 다음에 추가
        trow.insertAdjacentHTML("afterend", tr);

         // form 내부 요소의 입력값을 초기화
        form.reset(); 
      }

      // 목록 삭제 이벤트 함수
      function remove(event) {
        // 이벤트를 발생시킨 요소의 class에 remove가 있으면
        if (event.target.className.includes("remove")) {
          // 삭제버튼
          const btnRemove = event.target;
          // 삭제버튼의 부모 부모노드인 tbody
          const t = btnRemove.parentNode.parentNode;
          t.remove();
        }
      }
    </script>
  </body>
</html>
